{"version":3,"sources":["api/api.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["API_URL","getTodos","fetch","then","response","json","search","status","a","todos","preparedSearch","toLocaleLowerCase","trim","filtededTodos","filter","todo","title","includes","completed","getUser","userId","TodoList","prevProps","this","props","todosSearch","todosStatus","setTodos","getFilteredTodos","selectedTodoId","setSelectedId","onChange","className","type","name","value","placeholder","map","id","classNames","htmlFor","checked","readOnly","onClick","React","PureComponent","CurrentUser","state","selectedUser","createdAt","updatedAt","username","email","phone","website","loadingData","selectedUserId","user","setState","Component","App","setFilteredTodos","key","changeHandler","e","target","ReactDOM","render","document","getElementById"],"mappings":"kXAGMA,EAAU,qCAET,SAASC,IACd,OAAOC,MAAM,GAAD,OAAIF,EAAJ,UACTG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,U,4CAGxB,WAAgCC,EAAgBC,GAAhD,mBAAAC,EAAA,sEACeP,IADf,OACCQ,EADD,OAECC,EAAiBJ,EAAOK,oBAAoBC,OAC5CC,EAAgBJ,EAAMK,QAAO,SAAAC,GAGjC,OAFsBA,EAAKC,MAAMJ,OAAOD,oBAEnBM,SAASP,MAN3B,KASGH,EATH,OAUE,WAVF,OAaE,cAbF,gDAWMM,EAAcC,QAAO,SAAAC,GAAI,OAAKA,EAAKG,cAXzC,gCAcML,EAAcC,QAAO,SAAAC,GAAI,OAAIA,EAAKG,cAdxC,iCAiBML,GAjBN,6C,sBAqBA,SAASM,EAAQC,GACtB,OAAOlB,MAAM,GAAD,OAAIF,EAAJ,iBAAoBoB,IAC7BjB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,U,WCjBlBgB,EAAb,wKACE,SAAmBC,GACjB,MAIIC,KAAKC,MAHPC,EADF,EACEA,YACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,SAGEL,EAAUG,cAAgBA,GAAeH,EAAUI,cAAgBA,GDdpE,SAAP,oCCeME,CAAiBH,EAAaC,GAC3BvB,MAAK,SAAAM,GAAK,OAAIkB,EAASlB,QAVhC,oBAcE,WACE,MAOIc,KAAKC,MANPf,EADF,EACEA,MACAoB,EAFF,EAEEA,eACAC,EAHF,EAGEA,cACAL,EAJF,EAIEA,YACAC,EALF,EAKEA,YACAK,EANF,EAMEA,SAGF,OACE,sBAAKC,UAAU,WAAf,UACE,uBACEC,KAAK,OACLC,KAAK,cACLC,MAAOV,EACPW,YAAY,cACZL,SAAUA,IAGZ,yBACEG,KAAK,cACLC,MAAOT,EACPK,SAAUA,EAHZ,UAKE,wBAAQI,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,0BAGF,wCAEA,qBAAKH,UAAU,2BAAf,SACE,oBAAIA,UAAU,iBAAd,SACGvB,EAAM4B,KAAI,gBACTC,EADS,EACTA,GACAtB,EAFS,EAETA,MACAI,EAHS,EAGTA,OACAF,EAJS,EAITA,UAJS,OAMT,qBAEEc,UAAWO,IACT,iBACA,CACE,0BAA2BrB,EAC3B,6BAA8BA,IANpC,UAUE,wBAAOsB,QAAO,UAAKF,GAAnB,UACE,uBACEA,GAAE,UAAKA,GACPL,KAAK,WACLQ,QAASvB,EACTwB,UAAQ,IAEV,4BAAI1B,OAGLa,IAAmBS,EAClB,wBACEL,KAAK,SACLD,UAAU,+DACVW,QAAS,WACPb,EAAc,iBAAkB,GAChCA,EAAc,iBAAkB,IALpC,yBAQYV,KAGZ,wBACEa,KAAK,SACLD,UAAU,+BACVW,QAAS,WACPb,EAAc,iBAAkBQ,GAChCR,EAAc,iBAAkBV,IALpC,yBAQYA,OAvCTkB,iBAvDrB,GAA8BM,IAAMC,eCFvBC,G,MAAb,4MACEC,MAAQ,CACNC,aAAc,CACZV,GAAI,EACJW,UAAW,GACXC,UAAW,GACXhB,KAAM,GACNiB,SAAU,GACVC,MAAO,GACPC,MAAO,GACPC,QAAS,KAVf,EAwBEC,YAAc,WACZpC,EAAQ,EAAKK,MAAMgC,gBAChBrD,MAAK,SAAAsD,GACJ,EAAKC,SAAS,CAAEV,aAAcS,QA3BtC,uDAcE,WACElC,KAAKgC,gBAfT,gCAkBE,SAAmBjC,GACbC,KAAKC,MAAMgC,iBAAmBlC,EAAUkC,gBAC1CjC,KAAKgC,gBApBX,oBA+BE,WACE,IAAQP,EAAiBzB,KAAKwB,MAAtBC,aAEAlB,EAAkBP,KAAKC,MAAvBM,cAER,OACE,sBAAKE,UAAU,cAAf,UACE,oBAAIA,UAAU,qBAAd,SAAmC,wDAAyBgB,EAAaV,QAEzE,oBAAIN,UAAU,oBAAd,SAAmCgB,EAAad,OAChD,mBAAGF,UAAU,qBAAb,SAAmCgB,EAAaI,QAChD,mBAAGpB,UAAU,qBAAb,SAAmCgB,EAAaK,QAChD,wBACEpB,KAAK,SACLD,UAAU,qBACVW,QAAS,WACPb,EAAc,iBAAkB,GAChCA,EAAc,iBAAkB,IALpC,0BA3CR,GAAiCc,IAAMe,YCEjCC,E,4MACJb,MAAe,CACbtC,MAAO,GACP+C,eAAgB,EAChB3B,eAAgB,EAChBJ,YAAa,GACbC,YAAa,O,EAUfmC,iBAAmB,SAACpD,GAClB,EAAKiD,SAAS,CAAEjD,W,EAGlBqB,cAAgB,SAACgC,EAAaxB,GAC5B,EAAKoB,SAAL,eACGI,EAAMxB,K,EAIXyB,cAA0E,SAACC,GACzE,MAAwBA,EAAEC,OAAlB/B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,EAAKuB,SAAL,eACGxB,EAAOC,K,uDArBZ,WAAqB,IAAD,OAClBlC,IACGE,MAAK,SAAAM,GAAK,OAAI,EAAKiD,SAAS,CAC3BjD,e,oBAsBN,WACE,MAMIc,KAAKwB,MALPtC,EADF,EACEA,MACA+C,EAFF,EAEEA,eACA3B,EAHF,EAGEA,eACAJ,EAJF,EAIEA,YACAC,EALF,EAKEA,YAGF,OACE,sBAAKM,UAAU,MAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CACEvB,MAAOA,EACPoB,eAAgBA,EAChBC,cAAeP,KAAKO,cACpBL,YAAaA,EACbC,YAAaA,EACbK,SAAUR,KAAKwC,cACfpC,SAAUJ,KAAKsC,qBAInB,qBAAK7B,UAAU,eAAf,SACE,qBAAKA,UAAU,yBAAf,SACGwB,EACC,cAAC,EAAD,CACEA,eAAgBA,EAChB1B,cAAeP,KAAKO,gBAEpB,8B,GAhEEc,IAAMe,WAwETC,ICrFfM,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7523c497.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\nimport { User } from '../types/User';\n\nconst API_URL = 'https://mate.academy/students-api/';\n\nexport function getTodos(): Promise<Todo[]> {\n  return fetch(`${API_URL}todos`)\n    .then(response => response.json());\n}\n\nexport async function getFilteredTodos(search: string, status: string) {\n  const todos = await getTodos();\n  const preparedSearch = search.toLocaleLowerCase().trim();\n  const filtededTodos = todos.filter(todo => {\n    const preparedTitle = todo.title.trim().toLocaleLowerCase();\n\n    return preparedTitle.includes(preparedSearch);\n  });\n\n  switch (status) {\n    case 'active':\n      return filtededTodos.filter(todo => !todo.completed);\n\n    case 'completed':\n      return filtededTodos.filter(todo => todo.completed);\n\n    default:\n      return filtededTodos;\n  }\n}\n\nexport function getUser(userId: number): Promise<User> {\n  return fetch(`${API_URL}users/${userId}`)\n    .then(response => response.json());\n}\n","import React, { ChangeEventHandler } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport './TodoList.scss';\nimport { getFilteredTodos } from '../../api/api';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodoId: number\n  setSelectedId: (key: string, id: number) => void;\n  todosSearch: string;\n  todosStatus: string;\n  onChange: ChangeEventHandler<HTMLInputElement | HTMLSelectElement>;\n  setTodos: (todos: Todo[]) => void;\n};\n\nexport class TodoList extends React.PureComponent<Props> {\n  componentDidUpdate(prevProps: Props) {\n    const {\n      todosSearch,\n      todosStatus,\n      setTodos,\n    } = this.props;\n\n    if (prevProps.todosSearch !== todosSearch || prevProps.todosStatus !== todosStatus) {\n      getFilteredTodos(todosSearch, todosStatus)\n        .then(todos => setTodos(todos));\n    }\n  }\n\n  render() {\n    const {\n      todos,\n      selectedTodoId,\n      setSelectedId,\n      todosSearch,\n      todosStatus,\n      onChange,\n    } = this.props;\n\n    return (\n      <div className=\"TodoList\">\n        <input\n          type=\"text\"\n          name=\"todosSearch\"\n          value={todosSearch}\n          placeholder=\"Search todo\"\n          onChange={onChange}\n        />\n\n        <select\n          name=\"todosStatus\"\n          value={todosStatus}\n          onChange={onChange}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {todos.map(({\n              id,\n              title,\n              userId,\n              completed,\n            }) => (\n              <li\n                key={id}\n                className={classNames(\n                  'TodoList__item',\n                  {\n                    'TodoList__item--checked': completed,\n                    'TodoList__item--unchecked': !completed,\n                  },\n                )}\n              >\n                <label htmlFor={`${id}`}>\n                  <input\n                    id={`${id}`}\n                    type=\"checkbox\"\n                    checked={completed}\n                    readOnly\n                  />\n                  <p>{title}</p>\n                </label>\n\n                {selectedTodoId === id ? (\n                  <button\n                    type=\"button\"\n                    className=\"TodoList__user-button TodoList__user-button--selected button\"\n                    onClick={() => {\n                      setSelectedId('selectedTodoId', 0);\n                      setSelectedId('selectedUserId', 0);\n                    }}\n                  >\n                    {`User #${userId}`}\n                  </button>\n                ) : (\n                  <button\n                    type=\"button\"\n                    className=\"TodoList__user-button button\"\n                    onClick={() => {\n                      setSelectedId('selectedTodoId', id);\n                      setSelectedId('selectedUserId', userId);\n                    }}\n                  >\n                    {`User #${userId}`}\n                  </button>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { getUser } from '../../api/api';\nimport { User } from '../../types/User';\nimport './CurrentUser.scss';\n\ntype Props = {\n  selectedUserId: number;\n  setSelectedId: (key: string, id: number) => void;\n};\n\ntype State = {\n  selectedUser: User,\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state = {\n    selectedUser: {\n      id: 0,\n      createdAt: '',\n      updatedAt: '',\n      name: '',\n      username: '',\n      email: '',\n      phone: '',\n      website: '',\n    },\n  };\n\n  componentDidMount() {\n    this.loadingData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.selectedUserId !== prevProps.selectedUserId) {\n      this.loadingData();\n    }\n  }\n\n  loadingData = () => {\n    getUser(this.props.selectedUserId)\n      .then(user => {\n        this.setState({ selectedUser: user });\n      });\n  };\n\n  render() {\n    const { selectedUser } = this.state;\n\n    const { setSelectedId } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\"><span>{`Selected user: ${selectedUser.id}`}</span></h2>\n\n        <h3 className=\"CurrentUser__name\">{selectedUser.name}</h3>\n        <p className=\"CurrentUser__email\">{selectedUser.email}</p>\n        <p className=\"CurrentUser__phone\">{selectedUser.phone}</p>\n        <button\n          type=\"button\"\n          className=\"CurrentUser__clear\"\n          onClick={() => {\n            setSelectedId('selectedTodoId', 0);\n            setSelectedId('selectedUserId', 0);\n          }}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n","import React, { ChangeEventHandler } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\nimport { Todo } from './types/Todo';\n\ninterface State {\n  todos: Todo[];\n  selectedUserId: number;\n  selectedTodoId: number;\n  todosSearch: string;\n  todosStatus: string;\n}\n\nclass App extends React.Component {\n  state: State = {\n    todos: [],\n    selectedUserId: 0,\n    selectedTodoId: 0,\n    todosSearch: '',\n    todosStatus: 'all',\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then(todos => this.setState({\n        todos,\n      }));\n  }\n\n  setFilteredTodos = (todos: Todo[]) => {\n    this.setState({ todos });\n  };\n\n  setSelectedId = (key: string, id: number) => {\n    this.setState({\n      [key]: id,\n    });\n  };\n\n  changeHandler: ChangeEventHandler<HTMLInputElement | HTMLSelectElement> = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const {\n      todos,\n      selectedUserId,\n      selectedTodoId,\n      todosSearch,\n      todosStatus,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectedTodoId={selectedTodoId}\n            setSelectedId={this.setSelectedId}\n            todosSearch={todosSearch}\n            todosStatus={todosStatus}\n            onChange={this.changeHandler}\n            setTodos={this.setFilteredTodos}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                selectedUserId={selectedUserId}\n                setSelectedId={this.setSelectedId}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}